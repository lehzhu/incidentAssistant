<div class="row">
  <div class="col-lg-4">
    <div class="card">
      <div class="card-header">
        <h5 class="card-title mb-0">
          <i class="bi bi-upload me-2"></i>
          Create New Incident
        </h5>
      </div>
      <div class="card-body">
        <%= form_with url: incidents_path, local: false, id: "incident-form" do |form| %>
          <div class="mb-3">
            <%= form.label :title, class: "form-label" %>
            <%= form.text_field :title, class: "form-control", placeholder: "e.g., Database Outage - Customer Impact" %>
          </div>
          
          <div class="mb-3">
            <%= form.label :description, class: "form-label" %>
            <%= form.text_area :description, class: "form-control", rows: 3, placeholder: "Brief description of the incident..." %>
          </div>
          
          <div class="mb-3">
            <%= form.label :transcript_file, "Transcript File", class: "form-label" %>
            <input type="file" id="transcript_file" class="form-control" accept=".json" />
            <div class="form-text">Upload the rootly_takehome_transcript_80_no_timestamps.json file</div>
          </div>
          
          <%= form.hidden_field :transcript_data, id: "transcript_data" %>
          
          <div class="d-grid">
            <%= form.submit "Create Incident", class: "btn btn-primary" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
  
  <div class="col-lg-8">
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">
          <i class="bi bi-list-ul me-2"></i>
          Recent Incidents
        </h5>
        <span class="badge bg-secondary"><%= @incidents.count %> total</span>
      </div>
      <div class="card-body">
        <% if @incidents.any? %>
          <div class="list-group list-group-flush">
            <% @incidents.each do |incident| %>
              <div class="list-group-item d-flex justify-content-between align-items-start">
                <div class="ms-2 me-auto">
                  <div class="fw-bold">
                    <%= link_to incident.title, incident_path(incident), class: "text-decoration-none" %>
                  </div>
                  <small class="text-muted">
                    Created <%= time_ago_in_words(incident.created_at) %> ago
                  </small>
                  <% if incident.description.present? %>
                    <div class="mt-1">
                      <small><%= truncate(incident.description, length: 100) %></small>
                    </div>
                  <% end %>
                </div>
                <div class="text-end">
                  <span class="badge bg-<%= incident.status == 'resolved' ? 'success' : 'warning' %> mb-1">
                    <%= incident.status&.humanize || 'Unknown' %>
                  </span>
                  <% if incident.total_messages > 0 %>
                    <div class="small text-muted">
                      <%= incident.total_messages %> messages
                    </div>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        <% else %>
          <div class="text-center py-5">
            <i class="bi bi-inbox display-1 text-muted"></i>
            <h5 class="mt-3 text-muted">No incidents yet</h5>
            <p class="text-muted">Upload a transcript file to get started with incident analysis.</p>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('incident-form');
  const fileInput = document.getElementById('transcript_file');
  const transcriptDataInput = document.getElementById('transcript_data');
  
  fileInput.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        transcriptDataInput.value = e.target.result;
      };
      reader.readAsText(file);
    }
  });
  
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);
    
    fetch(form.action, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({ incident: data })
    })
    .then(response => response.json())
    .then(data => {
      if (data.id) {
        window.location.href = `/incidents/${data.id}`;
      } else if (data.errors) {
        alert('Error: ' + data.errors.join(', '));
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('An error occurred while creating the incident.');
    });
  });
});
</script>